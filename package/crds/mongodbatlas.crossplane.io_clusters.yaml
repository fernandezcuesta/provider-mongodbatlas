---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: clusters.mongodbatlas.crossplane.io
spec:
  group: mongodbatlas.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - mongodbatlas
    kind: Cluster
    listKind: ClusterList
    plural: clusters
    singular: cluster
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha3
    schema:
      openAPIV3Schema:
        description: Cluster is the Schema for the Clusters API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ClusterSpec defines the desired state of Cluster
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  acceptDataRisksAndForceReplicaSetReconfig:
                    description: |-
                      If reconfiguration is necessary to regain a primary due to a regional outage, submit this field alongside your topology reconfiguration to request a new regional outage resistant topology. Forced reconfigurations during an outage of the majority of electable nodes carry a risk of data loss if replicated writes (even majority committed writes) have not been replicated to the new primary node. MongoDB Atlas docs contain more information. To proceed with an operation which carries that risk, set accept_data_risks_and_force_replica_set_reconfig to the current date. Learn more about Reconfiguring a Replica Set during a regional outage here.
                      Submit this field alongside your topology reconfiguration to request a new regional outage resistant topology
                    type: string
                  advancedConfiguration:
                    items:
                      properties:
                        changeStreamOptionsPreAndPostImagesExpireAfterSeconds:
                          description: 'The minimum pre- and post-image retention
                            time in seconds. This option corresponds to the changeStreamOptions.preAndPostImages.expireAfterSeconds
                            cluster parameter. Defaults to -1(off). This setting controls
                            the retention policy of change stream pre- and post-images.
                            Pre- and post-images are the versions of a document before
                            and after document modification, respectively.expireAfterSeconds
                            controls how long MongoDB retains pre- and post-images.
                            When set to -1 (off), MongoDB uses the default retention
                            policy: pre- and post-images are retained until the corresponding
                            change stream events are removed from the oplog. To set
                            the minimum pre- and post-image retention time, specify
                            an integer value greater than zero. Setting this too low
                            could increase the risk of interrupting Realm sync or
                            triggers processing. This parameter is only supported
                            for MongoDB version 6.0 and above.'
                          type: number
                        defaultReadConcern:
                          description: Default level of acknowledgment requested from
                            MongoDB for read operations set for this cluster. MongoDB
                            4.4 clusters default to available.
                          type: string
                        defaultWriteConcern:
                          description: Default level of acknowledgment requested from
                            MongoDB for write operations set for this cluster. MongoDB
                            4.4 clusters default to 1.
                          type: string
                        failIndexKeyTooLong:
                          description: When true, documents can only be updated or
                            inserted if, for all indexed fields on the target collection,
                            the corresponding index entries do not exceed 1024 bytes.
                            When false, mongod writes documents that exceed the limit
                            but does not index them.
                          type: boolean
                        javascriptEnabled:
                          description: When true, the cluster allows execution of
                            operations that perform server-side executions of JavaScript.
                            When false, the cluster disables execution of those operations.
                          type: boolean
                        minimumEnabledTlsProtocol:
                          description: 'Sets the minimum Transport Layer Security
                            (TLS) version the cluster accepts for incoming connections.Valid
                            values are:'
                          type: string
                        noTableScan:
                          description: When true, the cluster disables the execution
                            of any query that requires a collection scan to return
                            results. When false, the cluster allows the execution
                            of those operations.
                          type: boolean
                        oplogMinRetentionHours:
                          description: Minimum retention window for cluster's oplog
                            expressed in hours. A value of null indicates that the
                            cluster uses the default minimum oplog window that MongoDB
                            Cloud calculates.
                          type: number
                        oplogSizeMb:
                          description: The custom oplog size of the cluster. Without
                            a value that indicates that the cluster uses the default
                            oplog size calculated by Atlas.
                          type: number
                        sampleRefreshIntervalBiConnector:
                          description: Interval in seconds at which the mongosqld
                            process re-samples data to create its relational schema.
                            The default value is 300. The specified value must be
                            a positive integer. Available only for Atlas deployments
                            in which BI Connector for Atlas is enabled.
                          type: number
                        sampleSizeBiConnector:
                          description: Number of documents per database to sample
                            when gathering schema information. Defaults to 100. Available
                            only for Atlas deployments in which BI Connector for Atlas
                            is enabled.
                          type: number
                        transactionLifetimeLimitSeconds:
                          description: Lifetime, in seconds, of multi-document transactions.
                            Defaults to 60 seconds.
                          type: number
                      type: object
                    type: array
                  autoScalingComputeEnabled:
                    description: Specifies whether cluster tier auto-scaling is enabled.
                      The default is false.
                    type: boolean
                  autoScalingComputeScaleDownEnabled:
                    description: Set to true to enable the cluster tier to scale down.
                      This option is only available if autoScaling.compute.enabled
                      is true.
                    type: boolean
                  autoScalingDiskGbEnabled:
                    description: Specifies whether disk auto-scaling is enabled. The
                      default is false.
                    type: boolean
                  backingProviderName:
                    description: Cloud service provider on which the server for a
                      multi-tenant cluster is provisioned.
                    type: string
                  backupEnabled:
                    description: |-
                      Legacy Backup - Set to true to enable Atlas legacy backups for the cluster.
                      Important - MongoDB deprecated the Legacy Backup feature. Clusters that use Legacy Backup can continue to use it. MongoDB recommends using Cloud Backups.
                      Clusters running MongoDB FCV 4.2 or later and any new Atlas clusters of any type do not support this parameter
                    type: boolean
                  biConnectorConfig:
                    description: Specifies BI Connector for Atlas configuration on
                      this cluster. BI Connector for Atlas is only available for M10+
                      clusters. See BI Connector below for more details.
                    items:
                      properties:
                        enabled:
                          description: Specifies whether or not BI Connector for Atlas
                            is enabled on the cluster.l
                          type: boolean
                        readPreference:
                          description: Specifies the read preference to be used by
                            BI Connector for Atlas on the cluster. Each BI Connector
                            for Atlas read preference contains a distinct combination
                            of readPreference and readPreferenceTags options. For
                            details on BI Connector for Atlas read preferences, refer
                            to the BI Connector Read Preferences Table.
                          type: string
                      type: object
                    type: array
                  cloudBackup:
                    description: ', to enable Cloud Backup.  If you create a new Atlas
                      cluster and set backup_enabled to true, the Provider will respond
                      with an error.  This change doesn’t affect existing clusters
                      that use legacy backups.'
                    type: boolean
                  clusterType:
                    description: Specifies the type of the cluster that you want to
                      modify. You cannot convert a sharded cluster deployment to a
                      replica set deployment.
                    type: string
                  diskSizeGb:
                    description: Capacity, in gigabytes, of the host’s root volume.
                      Increase this number to add capacity, up to a maximum possible
                      value of 4096 (i.e., 4 TB). This value must be a positive integer.
                    type: number
                  encryptionAtRestProvider:
                    description: 'Possible values are AWS, GCP, AZURE or NONE.  Only
                      needed if you desire to manage the keys, see Encryption at Rest
                      using Customer Key Management for complete documentation.  You
                      must configure encryption at rest for the Atlas project before
                      enabling it on any cluster in the project. For complete documentation
                      on configuring Encryption at Rest, see Encryption at Rest using
                      Customer Key Management. Requires M10 or greater. and for legacy
                      backups, backup_enabled, to be false or omitted. Note: Atlas
                      encrypts all cluster storage and snapshot volumes, securing
                      all cluster data on disk: a concept known as encryption at rest,
                      by default.'
                    type: string
                  labels:
                    description: Set that contains key-value pairs between 1 to 255
                      characters in length for tagging and categorizing the cluster.
                      See below. DEPRECATED Use tags instead.
                    items:
                      properties:
                        key:
                          description: Constant that defines the set of the tag.
                          type: string
                        value:
                          description: Variable that belongs to the set of the tag.
                          type: string
                      type: object
                    type: array
                  mongoDbMajorVersion:
                    description: Version of the cluster to deploy. Atlas supports
                      all the MongoDB versions that have not reached End of Live for
                      M10+ clusters. If omitted, Atlas deploys the cluster with the
                      default version. For more details, see documentation. Atlas
                      always deploys the cluster with the latest stable release of
                      the specified version. See Release Notes for latest Current
                      Stable Release.
                    type: string
                  numShards:
                    description: |-
                      Number of shards up to 50 to deploy for a sharded cluster. The resource returns 1 to indicate a replica set and values of 2 and higher to indicate a sharded cluster. The returned value equals the number of shards in the cluster.
                      If you are upgrading a replica set to a sharded cluster, you cannot increase the number of shards in the same update request. You should wait until after the cluster has completed upgrading to sharded and you have reconnected all application clients to the MongoDB router before adding additional shards. Otherwise, your data might become inconsistent once MongoDB Cloud begins distributing data across shards. To learn more, see Convert a replica set to a sharded cluster documentation and Convert a replica set to a sharded cluster tutorial.
                    type: number
                  paused:
                    description: |-
                      Flag that indicates whether the cluster is paused or not. You can pause M10 or larger clusters.  You cannot initiate pausing for a shared/tenant tier cluster.  See Considerations for Paused Clusters
                      NOTE Pause lasts for up to 30 days. If you don't resume the cluster within 30 days, Atlas resumes the cluster.   If you prefer to allow the automated change of state to unpaused use:
                      lifecycle { ignore_changes = [paused] }
                    type: boolean
                  pitEnabled:
                    description: '- Flag that indicates if the cluster uses Continuous
                      Cloud Backup. If set to true, cloud_backup must also be set
                      to true.'
                    type: boolean
                  projectId:
                    description: The unique ID for the project to create the database
                      user.
                    type: string
                  providerAutoScalingComputeMaxInstanceSize:
                    description: Maximum instance size to which your cluster can automatically
                      scale (e.g., M40). Required if autoScaling.compute.enabled is
                      true.
                    type: string
                  providerAutoScalingComputeMinInstanceSize:
                    description: Minimum instance size to which your cluster can automatically
                      scale (e.g., M10). Required if autoScaling.compute.scaleDownEnabled
                      is true.
                    type: string
                  providerDiskIops:
                    description: 'The maximum input/output operations per second (IOPS)
                      the system can perform. The possible values depend on the selected
                      provider_instance_size_name and disk_size_gb.  This setting
                      requires that provider_instance_size_name to be M30 or greater
                      and cannot be used with clusters with local NVMe SSDs.  The
                      default value for provider_disk_iops is the same as the cluster
                      tier''s Standard IOPS value, as viewable in the Atlas console.  It
                      is used in cases where a higher number of IOPS is needed and
                      possible.  If a value is submitted that is lower or equal to
                      the default IOPS value for the cluster tier Atlas ignores the
                      requested value and uses the default.  More details available
                      under the providerSettings.diskIOPS parameter: MongoDB API Clusters'
                    type: number
                  providerDiskTypeName:
                    description: 'Azure disk type of the server’s root volume. If
                      omitted, Atlas uses the default disk type for the selected providerSettings.instanceSizeName.  Example
                      disk types and associated storage sizes: P4 - 32GB, P6 - 64GB,
                      P10 - 128GB, P15 - 256GB, P20 - 512GB, P30 - 1024GB, P40 - 2048GB,
                      P50 - 4095GB.  More information and the most update to date
                      disk types/storage sizes can be located at https://docs.atlas.mongodb.com/reference/api/clusters-create-one/.'
                    type: string
                  providerEncryptEbsVolume:
                    description: '(Deprecated) The Flag is always true. Flag that
                      indicates whether the Amazon EBS encryption feature encrypts
                      the host''s root volume for both data at rest within the volume
                      and for data moving between the volume and the cluster. Note:
                      This setting is always enabled for clusters with local NVMe
                      SSDs. Atlas encrypts all cluster storage and snapshot volumes,
                      securing all cluster data on disk: a concept known as encryption
                      at rest, by default..'
                    type: boolean
                  providerInstanceSizeName:
                    description: Atlas provides different instance sizes, each with
                      a default storage capacity and RAM size. The instance size you
                      select is used for all the data-bearing servers in your cluster.
                      See Create a Cluster providerSettings.instanceSizeName for valid
                      values and default resources.
                    type: string
                  providerName:
                    description: Cloud service provider on which the servers are provisioned.
                    type: string
                  providerRegionName:
                    description: |-
                      Physical location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases.  Requires the Atlas region name, see the reference list for AWS, GCP, Azure.
                      Do not specify this field when creating a multi-region cluster using the replicationSpec document or a Global Cluster with the replicationSpecs array.
                    type: string
                  providerVolumeType:
                    description: |-
                      (AWS - Optional) The type of the volume. The possible values are: STANDARD and PROVISIONED.  PROVISIONED is ONLY required if setting IOPS higher than the default instance IOPS.
                      -> NOTE: STANDARD is not available for NVME clusters.
                    type: string
                  redactClientLogData:
                    description: 'Flag that enables or disables log redaction, see
                      the manual for more info. Use this in conjunction with Encryption
                      at Rest and TLS/SSL (Transport Encryption) to assist compliance
                      with regulatory requirements. Note: Changing this setting on
                      a cluster will trigger a rolling restart as soon as the cluster
                      is updated. The log redaction field is updated via an Atlas
                      API call after cluster creation. Consequently, there may be
                      a brief period during resource creation when log redaction is
                      not yet enabled. To ensure complete log redaction from the outset,
                      use mongodbatlas_advanced_cluster.'
                    type: boolean
                  replicationFactor:
                    description: (Deprecated) Number of replica set members. Each
                      member keeps a copy of your databases, providing high availability
                      and data redundancy. The possible values are 3, 5, or 7. The
                      default value is 3.
                    type: number
                  replicationSpecs:
                    description: Configuration for cluster regions.  See Replication
                      Spec below for more details.
                    items:
                      properties:
                        id:
                          description: Unique identifier for this policy item.
                          type: string
                        numShards:
                          description: |-
                            Number of shards up to 50 to deploy for a sharded cluster. The resource returns 1 to indicate a replica set and values of 2 and higher to indicate a sharded cluster. The returned value equals the number of shards in the cluster.
                            If you are upgrading a replica set to a sharded cluster, you cannot increase the number of shards in the same update request. You should wait until after the cluster has completed upgrading to sharded and you have reconnected all application clients to the MongoDB router before adding additional shards. Otherwise, your data might become inconsistent once MongoDB Cloud begins distributing data across shards. To learn more, see Convert a replica set to a sharded cluster documentation and Convert a replica set to a sharded cluster tutorial.
                          type: number
                        regionsConfig:
                          description: Physical location of the region. Each regionsConfig
                            document describes the region’s priority in elections
                            and the number and type of MongoDB nodes Atlas deploys
                            to the region. You must order each regionsConfigs document
                            by regionsConfig.priority, descending. See Region Config
                            below for more details.
                          items:
                            properties:
                              analyticsNodes:
                                description: The number of analytics nodes for Atlas
                                  to deploy to the region. Analytics nodes are useful
                                  for handling analytic data such as reporting queries
                                  from BI Connector for Atlas. Analytics nodes are
                                  read-only, and can never become the primary. If
                                  you do not specify this option, no analytics nodes
                                  are deployed to the region.
                                type: number
                              electableNodes:
                                description: Number of electable nodes for Atlas to
                                  deploy to the region. Electable nodes can become
                                  the primary and can facilitate local reads.
                                type: number
                              priority:
                                description: is 0.
                                type: number
                              readOnlyNodes:
                                description: Number of read-only nodes for Atlas to
                                  deploy to the region. Read-only nodes can never
                                  become the primary, but can facilitate local-reads.
                                  Specify 0 if you do not want any read-only nodes
                                  in the region.
                                type: number
                              regionName:
                                description: Physical location of your MongoDB cluster.
                                  The region you choose can affect network latency
                                  for clients accessing your databases.  Requires
                                  the Atlas region name, see the reference list for
                                  AWS, GCP, Azure.
                                type: string
                            type: object
                          type: array
                        zoneName:
                          description: Name for the zone in a Global Cluster.
                          type: string
                      type: object
                    type: array
                  retainBackupsEnabled:
                    description: |-
                      Set to true to retain backup snapshots for the deleted cluster. M10 and above only.
                      Flag that indicates whether to retain backup snapshots for the deleted dedicated cluster
                    type: boolean
                  tags:
                    description: Set that contains key-value pairs between 1 to 255
                      characters in length for tagging and categorizing the cluster.
                      See below.
                    items:
                      properties:
                        key:
                          description: Constant that defines the set of the tag.
                          type: string
                        value:
                          description: Variable that belongs to the set of the tag.
                          type: string
                      type: object
                    type: array
                  terminationProtectionEnabled:
                    description: Flag that indicates whether termination protection
                      is enabled on the cluster. If set to true, MongoDB Cloud won't
                      delete the cluster. If set to false, MongoDB Cloud will delete
                      the cluster.
                    type: boolean
                  versionReleaseSystem:
                    description: '- Release cadence that Atlas uses for this cluster.
                      This parameter defaults to LTS. If you set this field to CONTINUOUS,
                      you must omit the mongo_db_major_version field. Atlas accepts:'
                    type: string
                required:
                - projectId
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  acceptDataRisksAndForceReplicaSetReconfig:
                    description: |-
                      If reconfiguration is necessary to regain a primary due to a regional outage, submit this field alongside your topology reconfiguration to request a new regional outage resistant topology. Forced reconfigurations during an outage of the majority of electable nodes carry a risk of data loss if replicated writes (even majority committed writes) have not been replicated to the new primary node. MongoDB Atlas docs contain more information. To proceed with an operation which carries that risk, set accept_data_risks_and_force_replica_set_reconfig to the current date. Learn more about Reconfiguring a Replica Set during a regional outage here.
                      Submit this field alongside your topology reconfiguration to request a new regional outage resistant topology
                    type: string
                  advancedConfiguration:
                    items:
                      properties:
                        changeStreamOptionsPreAndPostImagesExpireAfterSeconds:
                          description: 'The minimum pre- and post-image retention
                            time in seconds. This option corresponds to the changeStreamOptions.preAndPostImages.expireAfterSeconds
                            cluster parameter. Defaults to -1(off). This setting controls
                            the retention policy of change stream pre- and post-images.
                            Pre- and post-images are the versions of a document before
                            and after document modification, respectively.expireAfterSeconds
                            controls how long MongoDB retains pre- and post-images.
                            When set to -1 (off), MongoDB uses the default retention
                            policy: pre- and post-images are retained until the corresponding
                            change stream events are removed from the oplog. To set
                            the minimum pre- and post-image retention time, specify
                            an integer value greater than zero. Setting this too low
                            could increase the risk of interrupting Realm sync or
                            triggers processing. This parameter is only supported
                            for MongoDB version 6.0 and above.'
                          type: number
                        defaultReadConcern:
                          description: Default level of acknowledgment requested from
                            MongoDB for read operations set for this cluster. MongoDB
                            4.4 clusters default to available.
                          type: string
                        defaultWriteConcern:
                          description: Default level of acknowledgment requested from
                            MongoDB for write operations set for this cluster. MongoDB
                            4.4 clusters default to 1.
                          type: string
                        failIndexKeyTooLong:
                          description: When true, documents can only be updated or
                            inserted if, for all indexed fields on the target collection,
                            the corresponding index entries do not exceed 1024 bytes.
                            When false, mongod writes documents that exceed the limit
                            but does not index them.
                          type: boolean
                        javascriptEnabled:
                          description: When true, the cluster allows execution of
                            operations that perform server-side executions of JavaScript.
                            When false, the cluster disables execution of those operations.
                          type: boolean
                        minimumEnabledTlsProtocol:
                          description: 'Sets the minimum Transport Layer Security
                            (TLS) version the cluster accepts for incoming connections.Valid
                            values are:'
                          type: string
                        noTableScan:
                          description: When true, the cluster disables the execution
                            of any query that requires a collection scan to return
                            results. When false, the cluster allows the execution
                            of those operations.
                          type: boolean
                        oplogMinRetentionHours:
                          description: Minimum retention window for cluster's oplog
                            expressed in hours. A value of null indicates that the
                            cluster uses the default minimum oplog window that MongoDB
                            Cloud calculates.
                          type: number
                        oplogSizeMb:
                          description: The custom oplog size of the cluster. Without
                            a value that indicates that the cluster uses the default
                            oplog size calculated by Atlas.
                          type: number
                        sampleRefreshIntervalBiConnector:
                          description: Interval in seconds at which the mongosqld
                            process re-samples data to create its relational schema.
                            The default value is 300. The specified value must be
                            a positive integer. Available only for Atlas deployments
                            in which BI Connector for Atlas is enabled.
                          type: number
                        sampleSizeBiConnector:
                          description: Number of documents per database to sample
                            when gathering schema information. Defaults to 100. Available
                            only for Atlas deployments in which BI Connector for Atlas
                            is enabled.
                          type: number
                        transactionLifetimeLimitSeconds:
                          description: Lifetime, in seconds, of multi-document transactions.
                            Defaults to 60 seconds.
                          type: number
                      type: object
                    type: array
                  autoScalingComputeEnabled:
                    description: Specifies whether cluster tier auto-scaling is enabled.
                      The default is false.
                    type: boolean
                  autoScalingComputeScaleDownEnabled:
                    description: Set to true to enable the cluster tier to scale down.
                      This option is only available if autoScaling.compute.enabled
                      is true.
                    type: boolean
                  autoScalingDiskGbEnabled:
                    description: Specifies whether disk auto-scaling is enabled. The
                      default is false.
                    type: boolean
                  backingProviderName:
                    description: Cloud service provider on which the server for a
                      multi-tenant cluster is provisioned.
                    type: string
                  backupEnabled:
                    description: |-
                      Legacy Backup - Set to true to enable Atlas legacy backups for the cluster.
                      Important - MongoDB deprecated the Legacy Backup feature. Clusters that use Legacy Backup can continue to use it. MongoDB recommends using Cloud Backups.
                      Clusters running MongoDB FCV 4.2 or later and any new Atlas clusters of any type do not support this parameter
                    type: boolean
                  biConnectorConfig:
                    description: Specifies BI Connector for Atlas configuration on
                      this cluster. BI Connector for Atlas is only available for M10+
                      clusters. See BI Connector below for more details.
                    items:
                      properties:
                        enabled:
                          description: Specifies whether or not BI Connector for Atlas
                            is enabled on the cluster.l
                          type: boolean
                        readPreference:
                          description: Specifies the read preference to be used by
                            BI Connector for Atlas on the cluster. Each BI Connector
                            for Atlas read preference contains a distinct combination
                            of readPreference and readPreferenceTags options. For
                            details on BI Connector for Atlas read preferences, refer
                            to the BI Connector Read Preferences Table.
                          type: string
                      type: object
                    type: array
                  cloudBackup:
                    description: ', to enable Cloud Backup.  If you create a new Atlas
                      cluster and set backup_enabled to true, the Provider will respond
                      with an error.  This change doesn’t affect existing clusters
                      that use legacy backups.'
                    type: boolean
                  clusterType:
                    description: Specifies the type of the cluster that you want to
                      modify. You cannot convert a sharded cluster deployment to a
                      replica set deployment.
                    type: string
                  diskSizeGb:
                    description: Capacity, in gigabytes, of the host’s root volume.
                      Increase this number to add capacity, up to a maximum possible
                      value of 4096 (i.e., 4 TB). This value must be a positive integer.
                    type: number
                  encryptionAtRestProvider:
                    description: 'Possible values are AWS, GCP, AZURE or NONE.  Only
                      needed if you desire to manage the keys, see Encryption at Rest
                      using Customer Key Management for complete documentation.  You
                      must configure encryption at rest for the Atlas project before
                      enabling it on any cluster in the project. For complete documentation
                      on configuring Encryption at Rest, see Encryption at Rest using
                      Customer Key Management. Requires M10 or greater. and for legacy
                      backups, backup_enabled, to be false or omitted. Note: Atlas
                      encrypts all cluster storage and snapshot volumes, securing
                      all cluster data on disk: a concept known as encryption at rest,
                      by default.'
                    type: string
                  labels:
                    description: Set that contains key-value pairs between 1 to 255
                      characters in length for tagging and categorizing the cluster.
                      See below. DEPRECATED Use tags instead.
                    items:
                      properties:
                        key:
                          description: Constant that defines the set of the tag.
                          type: string
                        value:
                          description: Variable that belongs to the set of the tag.
                          type: string
                      type: object
                    type: array
                  mongoDbMajorVersion:
                    description: Version of the cluster to deploy. Atlas supports
                      all the MongoDB versions that have not reached End of Live for
                      M10+ clusters. If omitted, Atlas deploys the cluster with the
                      default version. For more details, see documentation. Atlas
                      always deploys the cluster with the latest stable release of
                      the specified version. See Release Notes for latest Current
                      Stable Release.
                    type: string
                  numShards:
                    description: |-
                      Number of shards up to 50 to deploy for a sharded cluster. The resource returns 1 to indicate a replica set and values of 2 and higher to indicate a sharded cluster. The returned value equals the number of shards in the cluster.
                      If you are upgrading a replica set to a sharded cluster, you cannot increase the number of shards in the same update request. You should wait until after the cluster has completed upgrading to sharded and you have reconnected all application clients to the MongoDB router before adding additional shards. Otherwise, your data might become inconsistent once MongoDB Cloud begins distributing data across shards. To learn more, see Convert a replica set to a sharded cluster documentation and Convert a replica set to a sharded cluster tutorial.
                    type: number
                  paused:
                    description: |-
                      Flag that indicates whether the cluster is paused or not. You can pause M10 or larger clusters.  You cannot initiate pausing for a shared/tenant tier cluster.  See Considerations for Paused Clusters
                      NOTE Pause lasts for up to 30 days. If you don't resume the cluster within 30 days, Atlas resumes the cluster.   If you prefer to allow the automated change of state to unpaused use:
                      lifecycle { ignore_changes = [paused] }
                    type: boolean
                  pitEnabled:
                    description: '- Flag that indicates if the cluster uses Continuous
                      Cloud Backup. If set to true, cloud_backup must also be set
                      to true.'
                    type: boolean
                  providerAutoScalingComputeMaxInstanceSize:
                    description: Maximum instance size to which your cluster can automatically
                      scale (e.g., M40). Required if autoScaling.compute.enabled is
                      true.
                    type: string
                  providerAutoScalingComputeMinInstanceSize:
                    description: Minimum instance size to which your cluster can automatically
                      scale (e.g., M10). Required if autoScaling.compute.scaleDownEnabled
                      is true.
                    type: string
                  providerDiskIops:
                    description: 'The maximum input/output operations per second (IOPS)
                      the system can perform. The possible values depend on the selected
                      provider_instance_size_name and disk_size_gb.  This setting
                      requires that provider_instance_size_name to be M30 or greater
                      and cannot be used with clusters with local NVMe SSDs.  The
                      default value for provider_disk_iops is the same as the cluster
                      tier''s Standard IOPS value, as viewable in the Atlas console.  It
                      is used in cases where a higher number of IOPS is needed and
                      possible.  If a value is submitted that is lower or equal to
                      the default IOPS value for the cluster tier Atlas ignores the
                      requested value and uses the default.  More details available
                      under the providerSettings.diskIOPS parameter: MongoDB API Clusters'
                    type: number
                  providerDiskTypeName:
                    description: 'Azure disk type of the server’s root volume. If
                      omitted, Atlas uses the default disk type for the selected providerSettings.instanceSizeName.  Example
                      disk types and associated storage sizes: P4 - 32GB, P6 - 64GB,
                      P10 - 128GB, P15 - 256GB, P20 - 512GB, P30 - 1024GB, P40 - 2048GB,
                      P50 - 4095GB.  More information and the most update to date
                      disk types/storage sizes can be located at https://docs.atlas.mongodb.com/reference/api/clusters-create-one/.'
                    type: string
                  providerEncryptEbsVolume:
                    description: '(Deprecated) The Flag is always true. Flag that
                      indicates whether the Amazon EBS encryption feature encrypts
                      the host''s root volume for both data at rest within the volume
                      and for data moving between the volume and the cluster. Note:
                      This setting is always enabled for clusters with local NVMe
                      SSDs. Atlas encrypts all cluster storage and snapshot volumes,
                      securing all cluster data on disk: a concept known as encryption
                      at rest, by default..'
                    type: boolean
                  providerInstanceSizeName:
                    description: Atlas provides different instance sizes, each with
                      a default storage capacity and RAM size. The instance size you
                      select is used for all the data-bearing servers in your cluster.
                      See Create a Cluster providerSettings.instanceSizeName for valid
                      values and default resources.
                    type: string
                  providerName:
                    description: Cloud service provider on which the servers are provisioned.
                    type: string
                  providerRegionName:
                    description: |-
                      Physical location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases.  Requires the Atlas region name, see the reference list for AWS, GCP, Azure.
                      Do not specify this field when creating a multi-region cluster using the replicationSpec document or a Global Cluster with the replicationSpecs array.
                    type: string
                  providerVolumeType:
                    description: |-
                      (AWS - Optional) The type of the volume. The possible values are: STANDARD and PROVISIONED.  PROVISIONED is ONLY required if setting IOPS higher than the default instance IOPS.
                      -> NOTE: STANDARD is not available for NVME clusters.
                    type: string
                  redactClientLogData:
                    description: 'Flag that enables or disables log redaction, see
                      the manual for more info. Use this in conjunction with Encryption
                      at Rest and TLS/SSL (Transport Encryption) to assist compliance
                      with regulatory requirements. Note: Changing this setting on
                      a cluster will trigger a rolling restart as soon as the cluster
                      is updated. The log redaction field is updated via an Atlas
                      API call after cluster creation. Consequently, there may be
                      a brief period during resource creation when log redaction is
                      not yet enabled. To ensure complete log redaction from the outset,
                      use mongodbatlas_advanced_cluster.'
                    type: boolean
                  replicationFactor:
                    description: (Deprecated) Number of replica set members. Each
                      member keeps a copy of your databases, providing high availability
                      and data redundancy. The possible values are 3, 5, or 7. The
                      default value is 3.
                    type: number
                  replicationSpecs:
                    description: Configuration for cluster regions.  See Replication
                      Spec below for more details.
                    items:
                      properties:
                        id:
                          description: Unique identifier for this policy item.
                          type: string
                        numShards:
                          description: |-
                            Number of shards up to 50 to deploy for a sharded cluster. The resource returns 1 to indicate a replica set and values of 2 and higher to indicate a sharded cluster. The returned value equals the number of shards in the cluster.
                            If you are upgrading a replica set to a sharded cluster, you cannot increase the number of shards in the same update request. You should wait until after the cluster has completed upgrading to sharded and you have reconnected all application clients to the MongoDB router before adding additional shards. Otherwise, your data might become inconsistent once MongoDB Cloud begins distributing data across shards. To learn more, see Convert a replica set to a sharded cluster documentation and Convert a replica set to a sharded cluster tutorial.
                          type: number
                        regionsConfig:
                          description: Physical location of the region. Each regionsConfig
                            document describes the region’s priority in elections
                            and the number and type of MongoDB nodes Atlas deploys
                            to the region. You must order each regionsConfigs document
                            by regionsConfig.priority, descending. See Region Config
                            below for more details.
                          items:
                            properties:
                              analyticsNodes:
                                description: The number of analytics nodes for Atlas
                                  to deploy to the region. Analytics nodes are useful
                                  for handling analytic data such as reporting queries
                                  from BI Connector for Atlas. Analytics nodes are
                                  read-only, and can never become the primary. If
                                  you do not specify this option, no analytics nodes
                                  are deployed to the region.
                                type: number
                              electableNodes:
                                description: Number of electable nodes for Atlas to
                                  deploy to the region. Electable nodes can become
                                  the primary and can facilitate local reads.
                                type: number
                              priority:
                                description: is 0.
                                type: number
                              readOnlyNodes:
                                description: Number of read-only nodes for Atlas to
                                  deploy to the region. Read-only nodes can never
                                  become the primary, but can facilitate local-reads.
                                  Specify 0 if you do not want any read-only nodes
                                  in the region.
                                type: number
                              regionName:
                                description: Physical location of your MongoDB cluster.
                                  The region you choose can affect network latency
                                  for clients accessing your databases.  Requires
                                  the Atlas region name, see the reference list for
                                  AWS, GCP, Azure.
                                type: string
                            type: object
                          type: array
                        zoneName:
                          description: Name for the zone in a Global Cluster.
                          type: string
                      type: object
                    type: array
                  retainBackupsEnabled:
                    description: |-
                      Set to true to retain backup snapshots for the deleted cluster. M10 and above only.
                      Flag that indicates whether to retain backup snapshots for the deleted dedicated cluster
                    type: boolean
                  tags:
                    description: Set that contains key-value pairs between 1 to 255
                      characters in length for tagging and categorizing the cluster.
                      See below.
                    items:
                      properties:
                        key:
                          description: Constant that defines the set of the tag.
                          type: string
                        value:
                          description: Variable that belongs to the set of the tag.
                          type: string
                      type: object
                    type: array
                  terminationProtectionEnabled:
                    description: Flag that indicates whether termination protection
                      is enabled on the cluster. If set to true, MongoDB Cloud won't
                      delete the cluster. If set to false, MongoDB Cloud will delete
                      the cluster.
                    type: boolean
                  versionReleaseSystem:
                    description: '- Release cadence that Atlas uses for this cluster.
                      This parameter defaults to LTS. If you set this field to CONTINUOUS,
                      you must omit the mongo_db_major_version field. Atlas accepts:'
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.providerInstanceSizeName is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.providerInstanceSizeName)
                || (has(self.initProvider) && has(self.initProvider.providerInstanceSizeName))'
            - message: spec.forProvider.providerName is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.providerName)
                || (has(self.initProvider) && has(self.initProvider.providerName))'
          status:
            description: ClusterStatus defines the observed state of Cluster.
            properties:
              atProvider:
                properties:
                  acceptDataRisksAndForceReplicaSetReconfig:
                    description: |-
                      If reconfiguration is necessary to regain a primary due to a regional outage, submit this field alongside your topology reconfiguration to request a new regional outage resistant topology. Forced reconfigurations during an outage of the majority of electable nodes carry a risk of data loss if replicated writes (even majority committed writes) have not been replicated to the new primary node. MongoDB Atlas docs contain more information. To proceed with an operation which carries that risk, set accept_data_risks_and_force_replica_set_reconfig to the current date. Learn more about Reconfiguring a Replica Set during a regional outage here.
                      Submit this field alongside your topology reconfiguration to request a new regional outage resistant topology
                    type: string
                  advancedConfiguration:
                    items:
                      properties:
                        changeStreamOptionsPreAndPostImagesExpireAfterSeconds:
                          description: 'The minimum pre- and post-image retention
                            time in seconds. This option corresponds to the changeStreamOptions.preAndPostImages.expireAfterSeconds
                            cluster parameter. Defaults to -1(off). This setting controls
                            the retention policy of change stream pre- and post-images.
                            Pre- and post-images are the versions of a document before
                            and after document modification, respectively.expireAfterSeconds
                            controls how long MongoDB retains pre- and post-images.
                            When set to -1 (off), MongoDB uses the default retention
                            policy: pre- and post-images are retained until the corresponding
                            change stream events are removed from the oplog. To set
                            the minimum pre- and post-image retention time, specify
                            an integer value greater than zero. Setting this too low
                            could increase the risk of interrupting Realm sync or
                            triggers processing. This parameter is only supported
                            for MongoDB version 6.0 and above.'
                          type: number
                        defaultReadConcern:
                          description: Default level of acknowledgment requested from
                            MongoDB for read operations set for this cluster. MongoDB
                            4.4 clusters default to available.
                          type: string
                        defaultWriteConcern:
                          description: Default level of acknowledgment requested from
                            MongoDB for write operations set for this cluster. MongoDB
                            4.4 clusters default to 1.
                          type: string
                        failIndexKeyTooLong:
                          description: When true, documents can only be updated or
                            inserted if, for all indexed fields on the target collection,
                            the corresponding index entries do not exceed 1024 bytes.
                            When false, mongod writes documents that exceed the limit
                            but does not index them.
                          type: boolean
                        javascriptEnabled:
                          description: When true, the cluster allows execution of
                            operations that perform server-side executions of JavaScript.
                            When false, the cluster disables execution of those operations.
                          type: boolean
                        minimumEnabledTlsProtocol:
                          description: 'Sets the minimum Transport Layer Security
                            (TLS) version the cluster accepts for incoming connections.Valid
                            values are:'
                          type: string
                        noTableScan:
                          description: When true, the cluster disables the execution
                            of any query that requires a collection scan to return
                            results. When false, the cluster allows the execution
                            of those operations.
                          type: boolean
                        oplogMinRetentionHours:
                          description: Minimum retention window for cluster's oplog
                            expressed in hours. A value of null indicates that the
                            cluster uses the default minimum oplog window that MongoDB
                            Cloud calculates.
                          type: number
                        oplogSizeMb:
                          description: The custom oplog size of the cluster. Without
                            a value that indicates that the cluster uses the default
                            oplog size calculated by Atlas.
                          type: number
                        sampleRefreshIntervalBiConnector:
                          description: Interval in seconds at which the mongosqld
                            process re-samples data to create its relational schema.
                            The default value is 300. The specified value must be
                            a positive integer. Available only for Atlas deployments
                            in which BI Connector for Atlas is enabled.
                          type: number
                        sampleSizeBiConnector:
                          description: Number of documents per database to sample
                            when gathering schema information. Defaults to 100. Available
                            only for Atlas deployments in which BI Connector for Atlas
                            is enabled.
                          type: number
                        transactionLifetimeLimitSeconds:
                          description: Lifetime, in seconds, of multi-document transactions.
                            Defaults to 60 seconds.
                          type: number
                      type: object
                    type: array
                  autoScalingComputeEnabled:
                    description: Specifies whether cluster tier auto-scaling is enabled.
                      The default is false.
                    type: boolean
                  autoScalingComputeScaleDownEnabled:
                    description: Set to true to enable the cluster tier to scale down.
                      This option is only available if autoScaling.compute.enabled
                      is true.
                    type: boolean
                  autoScalingDiskGbEnabled:
                    description: Specifies whether disk auto-scaling is enabled. The
                      default is false.
                    type: boolean
                  backingProviderName:
                    description: Cloud service provider on which the server for a
                      multi-tenant cluster is provisioned.
                    type: string
                  backupEnabled:
                    description: |-
                      Legacy Backup - Set to true to enable Atlas legacy backups for the cluster.
                      Important - MongoDB deprecated the Legacy Backup feature. Clusters that use Legacy Backup can continue to use it. MongoDB recommends using Cloud Backups.
                      Clusters running MongoDB FCV 4.2 or later and any new Atlas clusters of any type do not support this parameter
                    type: boolean
                  biConnectorConfig:
                    description: Specifies BI Connector for Atlas configuration on
                      this cluster. BI Connector for Atlas is only available for M10+
                      clusters. See BI Connector below for more details.
                    items:
                      properties:
                        enabled:
                          description: Specifies whether or not BI Connector for Atlas
                            is enabled on the cluster.l
                          type: boolean
                        readPreference:
                          description: Specifies the read preference to be used by
                            BI Connector for Atlas on the cluster. Each BI Connector
                            for Atlas read preference contains a distinct combination
                            of readPreference and readPreferenceTags options. For
                            details on BI Connector for Atlas read preferences, refer
                            to the BI Connector Read Preferences Table.
                          type: string
                      type: object
                    type: array
                  cloudBackup:
                    description: ', to enable Cloud Backup.  If you create a new Atlas
                      cluster and set backup_enabled to true, the Provider will respond
                      with an error.  This change doesn’t affect existing clusters
                      that use legacy backups.'
                    type: boolean
                  clusterId:
                    description: The cluster ID.
                    type: string
                  clusterType:
                    description: Specifies the type of the cluster that you want to
                      modify. You cannot convert a sharded cluster deployment to a
                      replica set deployment.
                    type: string
                  connectionStrings:
                    description: 'Set of connection strings that your applications
                      use to connect to this cluster. More info in Connection-strings.
                      Use the parameters in this object to connect your applications
                      to this cluster. To learn more about the formats of connection
                      strings, see Connection String Options. NOTE: Atlas returns
                      the contents of this object after the cluster is operational,
                      not while it builds the cluster.'
                    items:
                      properties:
                        private:
                          description: Network-peering-endpoint-aware mongodb://connection
                            strings for each interface VPC endpoint you configured
                            to connect to this cluster. Returned only if you created
                            a network peering connection to this cluster.
                          type: string
                        privateEndpoint:
                          description: Private endpoint connection strings. Each object
                            describes the connection strings you can use to connect
                            to this cluster through a private endpoint. Atlas returns
                            this parameter only if you deployed a private endpoint
                            to all regions to which you deployed this cluster's nodes.
                          items:
                            properties:
                              connectionString:
                                description: Private-endpoint-aware mongodb://connection
                                  string for this private endpoint.
                                type: string
                              endpoints:
                                description: Private endpoint through which you connect
                                  to Atlas when you use connection_strings.private_endpoint[n].connection_string
                                  or connection_strings.private_endpoint[n].srv_connection_string
                                items:
                                  properties:
                                    endpointId:
                                      description: Unique identifier of the private
                                        endpoint.
                                      type: string
                                    providerName:
                                      description: Cloud service provider on which
                                        the servers are provisioned.
                                      type: string
                                    region:
                                      description: Region to which you deployed the
                                        private endpoint.
                                      type: string
                                  type: object
                                type: array
                              srvConnectionString:
                                description: 'Private-endpoint-aware mongodb+srv://
                                  connection string for this private endpoint. The
                                  mongodb+srv protocol tells the driver to look up
                                  the seed list of hosts in DNS . Atlas synchronizes
                                  this list with the nodes in a cluster. If the connection
                                  string uses this URI format, you don''t need to:
                                  Append the seed list or Change the URI if the nodes
                                  change. Use this URI format if your driver supports
                                  it. If it doesn''t, use connection_strings.private_endpoint[n].connection_string'
                                type: string
                              srvShardOptimizedConnectionString:
                                description: Private endpoint-aware connection string
                                  optimized for sharded clusters that uses the mongodb+srv://
                                  protocol to connect to MongoDB Cloud through a private
                                  endpoint. If the connection string uses this Uniform
                                  Resource Identifier (URI) format, you don't need
                                  to change the Uniform Resource Identifier (URI)
                                  if the nodes change. Use this Uniform Resource Identifier
                                  (URI) format if your application and Atlas cluster
                                  supports it. If it doesn't, use and consult the
                                  documentation for connectionStrings.privateEndpoint[n].srvConnectionString.
                                type: string
                              type:
                                description: Type of MongoDB process that you connect
                                  to with the connection strings. Atlas returns MONGOD
                                  for replica sets, or MONGOS for sharded clusters.
                                type: string
                            type: object
                          type: array
                        privateSrv:
                          description: Network-peering-endpoint-aware mongodb+srv://connection
                            strings for each interface VPC endpoint you configured
                            to connect to this cluster. Returned only if you created
                            a network peering connection to this cluster.
                          type: string
                        standard:
                          description: Public mongodb:// connection string for this
                            cluster.
                          type: string
                        standardSrv:
                          description: Public mongodb+srv:// connection string for
                            this cluster. The mongodb+srv protocol tells the driver
                            to look up the seed list of hosts in DNS. Atlas synchronizes
                            this list with the nodes in a cluster. If the connection
                            string uses this URI format, you don’t need to append
                            the seed list or change the URI if the nodes change. Use
                            this URI format if your driver supports it. If it doesn’t  ,
                            use connectionStrings.standard.
                          type: string
                      type: object
                    type: array
                  containerId:
                    description: The Container ID is the id of the container created
                      when the first cluster in the region (AWS/Azure) or project
                      (GCP) was created.
                    type: string
                  diskSizeGb:
                    description: Capacity, in gigabytes, of the host’s root volume.
                      Increase this number to add capacity, up to a maximum possible
                      value of 4096 (i.e., 4 TB). This value must be a positive integer.
                    type: number
                  encryptionAtRestProvider:
                    description: 'Possible values are AWS, GCP, AZURE or NONE.  Only
                      needed if you desire to manage the keys, see Encryption at Rest
                      using Customer Key Management for complete documentation.  You
                      must configure encryption at rest for the Atlas project before
                      enabling it on any cluster in the project. For complete documentation
                      on configuring Encryption at Rest, see Encryption at Rest using
                      Customer Key Management. Requires M10 or greater. and for legacy
                      backups, backup_enabled, to be false or omitted. Note: Atlas
                      encrypts all cluster storage and snapshot volumes, securing
                      all cluster data on disk: a concept known as encryption at rest,
                      by default.'
                    type: string
                  id:
                    description: Unique identifer of the replication document for
                      a zone in a Global Cluster. This value corresponds to the legacy
                      sharding schema (no independent shard scaling) and is different
                      from the Shard ID you may see in the Atlas UI.
                    type: string
                  labels:
                    description: Set that contains key-value pairs between 1 to 255
                      characters in length for tagging and categorizing the cluster.
                      See below. DEPRECATED Use tags instead.
                    items:
                      properties:
                        key:
                          description: Constant that defines the set of the tag.
                          type: string
                        value:
                          description: Variable that belongs to the set of the tag.
                          type: string
                      type: object
                    type: array
                  mongoDbMajorVersion:
                    description: Version of the cluster to deploy. Atlas supports
                      all the MongoDB versions that have not reached End of Live for
                      M10+ clusters. If omitted, Atlas deploys the cluster with the
                      default version. For more details, see documentation. Atlas
                      always deploys the cluster with the latest stable release of
                      the specified version. See Release Notes for latest Current
                      Stable Release.
                    type: string
                  mongoDbVersion:
                    description: Version of MongoDB the cluster runs, in major-version.minor-version
                      format.
                    type: string
                  mongoUri:
                    description: Base connection string for the cluster. Atlas only
                      displays this field after the cluster is operational, not while
                      it builds the cluster.
                    type: string
                  mongoUriUpdated:
                    description: Lists when the connection string was last updated.
                      The connection string changes, for example, if you change a
                      replica set to a sharded cluster.
                    type: string
                  mongoUriWithOptions:
                    description: connection string for connecting to the Atlas cluster.
                      Includes the replicaSet, ssl, and authSource query parameters
                      in the connection string with values appropriate for the cluster.
                    type: string
                  numShards:
                    description: |-
                      Number of shards up to 50 to deploy for a sharded cluster. The resource returns 1 to indicate a replica set and values of 2 and higher to indicate a sharded cluster. The returned value equals the number of shards in the cluster.
                      If you are upgrading a replica set to a sharded cluster, you cannot increase the number of shards in the same update request. You should wait until after the cluster has completed upgrading to sharded and you have reconnected all application clients to the MongoDB router before adding additional shards. Otherwise, your data might become inconsistent once MongoDB Cloud begins distributing data across shards. To learn more, see Convert a replica set to a sharded cluster documentation and Convert a replica set to a sharded cluster tutorial.
                    type: number
                  paused:
                    description: |-
                      Flag that indicates whether the cluster is paused or not. You can pause M10 or larger clusters.  You cannot initiate pausing for a shared/tenant tier cluster.  See Considerations for Paused Clusters
                      NOTE Pause lasts for up to 30 days. If you don't resume the cluster within 30 days, Atlas resumes the cluster.   If you prefer to allow the automated change of state to unpaused use:
                      lifecycle { ignore_changes = [paused] }
                    type: boolean
                  pitEnabled:
                    description: '- Flag that indicates if the cluster uses Continuous
                      Cloud Backup. If set to true, cloud_backup must also be set
                      to true.'
                    type: boolean
                  projectId:
                    description: The unique ID for the project to create the database
                      user.
                    type: string
                  providerAutoScalingComputeMaxInstanceSize:
                    description: Maximum instance size to which your cluster can automatically
                      scale (e.g., M40). Required if autoScaling.compute.enabled is
                      true.
                    type: string
                  providerAutoScalingComputeMinInstanceSize:
                    description: Minimum instance size to which your cluster can automatically
                      scale (e.g., M10). Required if autoScaling.compute.scaleDownEnabled
                      is true.
                    type: string
                  providerDiskIops:
                    description: 'The maximum input/output operations per second (IOPS)
                      the system can perform. The possible values depend on the selected
                      provider_instance_size_name and disk_size_gb.  This setting
                      requires that provider_instance_size_name to be M30 or greater
                      and cannot be used with clusters with local NVMe SSDs.  The
                      default value for provider_disk_iops is the same as the cluster
                      tier''s Standard IOPS value, as viewable in the Atlas console.  It
                      is used in cases where a higher number of IOPS is needed and
                      possible.  If a value is submitted that is lower or equal to
                      the default IOPS value for the cluster tier Atlas ignores the
                      requested value and uses the default.  More details available
                      under the providerSettings.diskIOPS parameter: MongoDB API Clusters'
                    type: number
                  providerDiskTypeName:
                    description: 'Azure disk type of the server’s root volume. If
                      omitted, Atlas uses the default disk type for the selected providerSettings.instanceSizeName.  Example
                      disk types and associated storage sizes: P4 - 32GB, P6 - 64GB,
                      P10 - 128GB, P15 - 256GB, P20 - 512GB, P30 - 1024GB, P40 - 2048GB,
                      P50 - 4095GB.  More information and the most update to date
                      disk types/storage sizes can be located at https://docs.atlas.mongodb.com/reference/api/clusters-create-one/.'
                    type: string
                  providerEncryptEbsVolume:
                    description: '(Deprecated) The Flag is always true. Flag that
                      indicates whether the Amazon EBS encryption feature encrypts
                      the host''s root volume for both data at rest within the volume
                      and for data moving between the volume and the cluster. Note:
                      This setting is always enabled for clusters with local NVMe
                      SSDs. Atlas encrypts all cluster storage and snapshot volumes,
                      securing all cluster data on disk: a concept known as encryption
                      at rest, by default..'
                    type: boolean
                  providerEncryptEbsVolumeFlag:
                    type: boolean
                  providerInstanceSizeName:
                    description: Atlas provides different instance sizes, each with
                      a default storage capacity and RAM size. The instance size you
                      select is used for all the data-bearing servers in your cluster.
                      See Create a Cluster providerSettings.instanceSizeName for valid
                      values and default resources.
                    type: string
                  providerName:
                    description: Cloud service provider on which the servers are provisioned.
                    type: string
                  providerRegionName:
                    description: |-
                      Physical location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases.  Requires the Atlas region name, see the reference list for AWS, GCP, Azure.
                      Do not specify this field when creating a multi-region cluster using the replicationSpec document or a Global Cluster with the replicationSpecs array.
                    type: string
                  providerVolumeType:
                    description: |-
                      (AWS - Optional) The type of the volume. The possible values are: STANDARD and PROVISIONED.  PROVISIONED is ONLY required if setting IOPS higher than the default instance IOPS.
                      -> NOTE: STANDARD is not available for NVME clusters.
                    type: string
                  redactClientLogData:
                    description: 'Flag that enables or disables log redaction, see
                      the manual for more info. Use this in conjunction with Encryption
                      at Rest and TLS/SSL (Transport Encryption) to assist compliance
                      with regulatory requirements. Note: Changing this setting on
                      a cluster will trigger a rolling restart as soon as the cluster
                      is updated. The log redaction field is updated via an Atlas
                      API call after cluster creation. Consequently, there may be
                      a brief period during resource creation when log redaction is
                      not yet enabled. To ensure complete log redaction from the outset,
                      use mongodbatlas_advanced_cluster.'
                    type: boolean
                  replicationFactor:
                    description: (Deprecated) Number of replica set members. Each
                      member keeps a copy of your databases, providing high availability
                      and data redundancy. The possible values are 3, 5, or 7. The
                      default value is 3.
                    type: number
                  replicationSpecs:
                    description: Configuration for cluster regions.  See Replication
                      Spec below for more details.
                    items:
                      properties:
                        id:
                          description: Unique identifier for this policy item.
                          type: string
                        numShards:
                          description: |-
                            Number of shards up to 50 to deploy for a sharded cluster. The resource returns 1 to indicate a replica set and values of 2 and higher to indicate a sharded cluster. The returned value equals the number of shards in the cluster.
                            If you are upgrading a replica set to a sharded cluster, you cannot increase the number of shards in the same update request. You should wait until after the cluster has completed upgrading to sharded and you have reconnected all application clients to the MongoDB router before adding additional shards. Otherwise, your data might become inconsistent once MongoDB Cloud begins distributing data across shards. To learn more, see Convert a replica set to a sharded cluster documentation and Convert a replica set to a sharded cluster tutorial.
                          type: number
                        regionsConfig:
                          description: Physical location of the region. Each regionsConfig
                            document describes the region’s priority in elections
                            and the number and type of MongoDB nodes Atlas deploys
                            to the region. You must order each regionsConfigs document
                            by regionsConfig.priority, descending. See Region Config
                            below for more details.
                          items:
                            properties:
                              analyticsNodes:
                                description: The number of analytics nodes for Atlas
                                  to deploy to the region. Analytics nodes are useful
                                  for handling analytic data such as reporting queries
                                  from BI Connector for Atlas. Analytics nodes are
                                  read-only, and can never become the primary. If
                                  you do not specify this option, no analytics nodes
                                  are deployed to the region.
                                type: number
                              electableNodes:
                                description: Number of electable nodes for Atlas to
                                  deploy to the region. Electable nodes can become
                                  the primary and can facilitate local reads.
                                type: number
                              priority:
                                description: is 0.
                                type: number
                              readOnlyNodes:
                                description: Number of read-only nodes for Atlas to
                                  deploy to the region. Read-only nodes can never
                                  become the primary, but can facilitate local-reads.
                                  Specify 0 if you do not want any read-only nodes
                                  in the region.
                                type: number
                              regionName:
                                description: Physical location of your MongoDB cluster.
                                  The region you choose can affect network latency
                                  for clients accessing your databases.  Requires
                                  the Atlas region name, see the reference list for
                                  AWS, GCP, Azure.
                                type: string
                            type: object
                          type: array
                        zoneName:
                          description: Name for the zone in a Global Cluster.
                          type: string
                      type: object
                    type: array
                  retainBackupsEnabled:
                    description: |-
                      Set to true to retain backup snapshots for the deleted cluster. M10 and above only.
                      Flag that indicates whether to retain backup snapshots for the deleted dedicated cluster
                    type: boolean
                  snapshotBackupPolicy:
                    description: current snapshot schedule and retention settings
                      for the cluster.
                    items:
                      properties:
                        clusterId:
                          description: Unique identifier of the Atlas cluster.
                          type: string
                        clusterName:
                          description: Name of the Atlas cluster that contains the
                            snapshot backup policy.
                          type: string
                        nextSnapshot:
                          description: UTC ISO 8601 formatted point in time when Atlas
                            will take the next snapshot.
                          type: string
                        policies:
                          description: A list of policy definitions for the cluster.
                          items:
                            properties:
                              id:
                                description: Unique identifier for this policy item.
                                type: string
                              policyItem:
                                description: A list of specifications for a policy.
                                items:
                                  properties:
                                    frequencyInterval:
                                      description: The frequency interval for a set
                                        of snapshots.
                                      type: number
                                    frequencyType:
                                      description: A type of frequency (hourly, daily,
                                        weekly, monthly).
                                      type: string
                                    id:
                                      description: Unique identifier for this policy
                                        item.
                                      type: string
                                    retentionUnit:
                                      description: The unit of time in which snapshot
                                        retention is measured (days, weeks, months).
                                      type: string
                                    retentionValue:
                                      description: The number of days, weeks, or months
                                        the snapshot is retained.
                                      type: number
                                  type: object
                                type: array
                            type: object
                          type: array
                        referenceHourOfDay:
                          description: UTC Hour of day between 0 and 23 representing
                            which hour of the day that Atlas takes a snapshot.
                          type: number
                        referenceMinuteOfHour:
                          description: UTC Minute of day between 0 and 59 representing
                            which minute of the referenceHourOfDay that Atlas takes
                            the snapshot.
                          type: number
                        restoreWindowDays:
                          description: Specifies a restore window in days for the
                            cloud provider backup to maintain.
                          type: number
                        updateSnapshots:
                          description: Specifies it's true to apply the retention
                            changes in the updated backup policy to snapshots that
                            Atlas took previously.
                          type: boolean
                      type: object
                    type: array
                  srvAddress:
                    description: Connection string for connecting to the Atlas cluster.
                      The +srv modifier forces the connection to use TLS/SSL. See
                      the mongoURI for additional options.
                    type: string
                  stateName:
                    description: 'Current state of the cluster. The possible states
                      are:'
                    type: string
                  tags:
                    description: Set that contains key-value pairs between 1 to 255
                      characters in length for tagging and categorizing the cluster.
                      See below.
                    items:
                      properties:
                        key:
                          description: Constant that defines the set of the tag.
                          type: string
                        value:
                          description: Variable that belongs to the set of the tag.
                          type: string
                      type: object
                    type: array
                  terminationProtectionEnabled:
                    description: Flag that indicates whether termination protection
                      is enabled on the cluster. If set to true, MongoDB Cloud won't
                      delete the cluster. If set to false, MongoDB Cloud will delete
                      the cluster.
                    type: boolean
                  versionReleaseSystem:
                    description: '- Release cadence that Atlas uses for this cluster.
                      This parameter defaults to LTS. If you set this field to CONTINUOUS,
                      you must omit the mongo_db_major_version field. Atlas accepts:'
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
